{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","components/ThoughtForm.js","components/Thought.js","components/ThoughtList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","addTodo","useState","id","task","date","completed","todo","setTodo","className","onSubmit","e","preventDefault","trim","Math","floor","random","Grid","container","direction","justifyContent","alignItems","TextField","multiline","maxRows","label","type","name","value","onChange","target","style","width","required","Button","class","fontFamily","fontSize","color","Todo","toggleComplete","removeTodo","Typography","variant","textDecoration","Checkbox","checked","onClick","IconButton","TodoList","todos","List","map","ThoughtForm","addTho","thought","dateTho","tho","setTho","Thought","toggleCompleteTho","removeTho","ThoughtList","thos","LOCAL_STORAGE_KEY","LOCAL_STORAGE_KEY2","App","setTodos","setThos","useEffect","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","storageThos","padding","textAlign","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57689224.chunk.js","sourcesContent":["import { Button, Grid, TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nfunction TodoForm({ addTodo }) {\n  const [todo, setTodo] = useState({\n    id: \"\",\n    task: \"\",\n    date:\"\",\n    completed: false\n  });\n\n  function handleTaskInputChange(e) {\n    // e.target.value contains new input from onChange\n    // event for input elements\n    setTodo({ ...todo, task: e.target.value });\n  }\n  function handleDateInputChange(e){\n    setTodo({...todo, date: e.target.value});\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault(); // prevents browser refresh\n    // trim() gets rid of string whitespace\n    if (todo.task.trim()) {\n      addTodo({ ...todo, id: Math.floor(Math.random()*1000) });\n      setTodo({ ...todo, task: \"\", date:\"\" });\n    }\n  }\n\n  return (\n  <>\n    <form className=\"todo-form mt-2\" onSubmit={handleSubmit}>\n    \n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"space-evenly\"\n      alignItems=\"center\">\n      <TextField\n        id=\"standard-multiline-flexible\"\n        multiline\n        maxRows={5}\n        label=\"Task (this is Multi-Lines)\"\n        type=\"text\"\n        name=\"task\"\n        value={todo.task}\n        onChange={handleTaskInputChange}\n        style={{width:\"400px\"}}\n        required\n      />\n      <TextField\n        type=\"date\"\n        name=\"date\"\n        value={todo.date}\n        onChange={handleDateInputChange}\n        className=\"mt-2\"\n        style={{width:\"180px\"}}\n        required\n      />\n      <Button type=\"submit\" className=\"bg-info mt-2\">Submit</Button>\n    \n    </Grid>\n    </form>\n\n<div class=\"container col-sm-6 col-md-12 mt-5\">\n<div className=\"row bg-info pt-2\">\n    <div className=\"col-md-1\">\n\n    </div>\n    <div className=\"col-md-1\">\n        <p style={{fontFamily: \"'Permanent Marker', cursive\",fontSize:\"25px\",color:\"white\"}}>Task #</p>\n    </div>\n    <div className=\"col-md-6\">\n        <p style={{fontFamily: \"'Permanent Marker', cursive\",fontSize:\"25px\",color:\"white\"}}>Task</p>\n    </div>\n    <div className=\"col-md-3\">\n        <p style={{fontFamily: \"'Permanent Marker', cursive\",fontSize:\"25px\",color:\"white\"}}>Due Date</p>\n    </div>\n    <div className=\"col-md-1 mt-2\">\n      <DeleteForeverIcon style={{fontSize:\"30\",color:\"white\"}}/>\n    </div>\n</div>\n</div>\n</>\n  );\n}\n\nexport default TodoForm;","import { Checkbox, IconButton, Typography } from \"@material-ui/core\";\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport React from \"react\";\n\n\nfunction Todo({ todo, toggleComplete, removeTodo }) {\n\n    \n    const handleCheckboxClick=(e)=> {\n    toggleComplete(todo.id);\n  }\n\n  const handleRemoveClick=(e)=> {\n    removeTodo(todo.id);\n  }\n  return (\n<div className=\"container col-md-12\">\n    \n\n    <Typography\n        variant=\"body1\"\n        style={{\n        textDecoration: todo.completed ? \"line-through\" : null\n        }}\n    >\n    <div className=\"row\">\n   \n    \n        <div className=\"col-md-1\">\n            <p><Checkbox checked={todo.completed} onClick={e=>handleCheckboxClick(e.target.value)} /></p>\n           \n        </div>\n        <div className=\"col-md-1\">\n            <p style={{fontFamily: \"'Indie Flower', cursive\", fontSize:\"20px\"}}>{todo.id}</p>\n        </div>\n        <div className=\"col-md-6\">\n           <p style={{fontFamily: \"'Indie Flower', cursive\", fontSize:\"25px\"}}>{todo.task}</p>\n        </div>\n        <div className=\"col-md-3\">\n            <p style={{fontFamily: \"'Indie Flower', cursive\", fontSize:\"25px\"}}>{todo.date}</p>\n        </div>\n        <div className=\"col-md-1\">\n            <IconButton onClick={e=> handleRemoveClick(e.target.value)}>\n                <CancelOutlinedIcon style={{color:\"red\"}}/>\n            </IconButton>\n        </div>\n       \n   \n    </div>\n    </Typography>\n    \n</div>\n  );\n  \n}\n\nexport default Todo;","import { List } from \"@material-ui/core\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\n\nfunction TodoList({ todos, removeTodo, toggleComplete }) {\n  return (\n    <List>\n      {todos.map(todo => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          removeTodo={removeTodo}\n          toggleComplete={toggleComplete}\n        />\n      ))}\n    </List>\n  );\n}\n\nexport default TodoList;","import { Button, Grid, TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nfunction ThoughtForm({ addTho }) {\n  const [tho, setTho] = useState({\n    id: \"\",\n    thought: \"\",\n    dateTho:\"\",\n    completed: false\n  });\n\n  function handleThoInputChange(e) {\n    // e.target.value contains new input from onChange\n    // event for input elements\n    setTho({ ...tho, thought: e.target.value });\n  }\n  function handleDateInputChangeTho(e){\n    setTho({...tho, dateTho: e.target.value});\n  }\n\n  function handleSubmitTho(e) {\n    e.preventDefault(); // prevents browser refresh\n    // trim() gets rid of string whitespace\n    if (tho.thought.trim()) {\n      addTho({ ...tho, id: Math.floor(Math.random()*1000) });\n      setTho({ ...tho, thought: \"\", dateTho:\"\" });\n    }\n  }\n\n  return (\n  <>\n    <form className=\"todo-form mt-2\" onSubmit={handleSubmitTho}>\n    \n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"space-evenly\"\n      alignItems=\"center\">\n      <TextField\n        id=\"standard-multiline-flexible\"\n        multiline\n        maxRows={5}\n        label=\"Thoughts for the day (this is Multi-Lines)\"\n        type=\"text\"\n        name=\"thought\"\n        value={tho.thought}\n        onChange={handleThoInputChange}\n        style={{width:\"400px\"}}\n        required\n      />\n      <TextField\n        type=\"date\"\n        name=\"date\"\n        value={tho.dateTho}\n        onChange={handleDateInputChangeTho}\n        className=\"mt-2\"\n        style={{width:\"180px\"}}\n        required\n      />\n      <Button type=\"submit\" className=\"bg-info mt-2\">Submit</Button>\n    \n    </Grid>\n    </form>\n\n<div class=\"container col-sm-6 col-md-12 mt-5\">\n<div className=\"row bg-info pt-2\">\n    <div className=\"col-md-1\">\n\n    </div>\n    <div className=\"col-md-1\">\n        <p style={{fontFamily: \"'Permanent Marker', cursive\",fontSize:\"25px\",color:\"white\"}}>#</p>\n    </div>\n    <div className=\"col-md-6\">\n        <p style={{fontFamily: \"'Permanent Marker', cursive\",fontSize:\"25px\",color:\"white\"}}>Thought for the day</p>\n    </div>\n    <div className=\"col-md-3\">\n        <p style={{fontFamily: \"'Permanent Marker', cursive\",fontSize:\"25px\",color:\"white\"}}>Date</p>\n    </div>\n    <div className=\"col-md-1\">\n    <DeleteForeverIcon style={{fontSize:\"30\",color:\"white\"}}/>\n    </div>\n</div>\n</div>\n</>\n  );\n}\n\nexport default ThoughtForm;","import { Checkbox, IconButton, Typography } from \"@material-ui/core\";\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport React from \"react\";\n\n\nfunction Thought({ tho, toggleCompleteTho, removeTho }) {\n\n    const handleCheckboxTho=(e)=> {\n    toggleCompleteTho(tho.id);\n  }\n\n  const handleRemoveTho=(e)=> {\n    removeTho(tho.id);\n  }\n  return (\n<div className=\"container col-md-12\">\n    \n\n    <Typography\n        variant=\"body1\"\n        style={{\n        textDecoration: tho.completed ? \"line-through\" : null\n        }}\n    >\n    <div className=\"row\">\n   \n    \n        <div className=\"col-md-1\">\n            <p><Checkbox checked={tho.completed} onClick={e=>handleCheckboxTho(e.target.value)} /></p>\n           \n        </div>\n        <div className=\"col-md-1\">\n            <p style={{fontFamily: \"'Indie Flower', cursive\", fontSize:\"20px\"}}>{tho.id}</p>\n        </div>\n        <div className=\"col-md-6\">\n           <p style={{fontFamily: \"'Indie Flower', cursive\", fontSize:\"25px\"}}>{tho.thought}</p>\n        </div>\n        <div className=\"col-md-3\">\n            <p style={{fontFamily: \"'Indie Flower', cursive\", fontSize:\"25px\"}}>{tho.dateTho}</p>\n        </div>\n        <div className=\"col-md-1\">\n            <IconButton onClick={e=> handleRemoveTho(e.target.value)}>\n                <CancelOutlinedIcon style={{color:\"red\"}}/>\n            </IconButton>\n        </div>\n    </div>\n    </Typography>\n    \n</div>\n  );\n  \n}\n\nexport default Thought;\n","import { List } from \"@material-ui/core\";\nimport React from \"react\";\nimport Thought from \"./Thought\";\n\nfunction ThoughtList({ thos, removeTho, toggleCompleteTho }) {\n  return (\n    <List>\n      {thos.map(tho => (\n        <Thought\n          key={tho.id}\n          tho={tho}\n          removeTho={removeTho}\n          toggleCompleteTho={toggleCompleteTho}\n        />\n      ))}\n    </List>\n  );\n}\n\nexport default ThoughtList;","import { Typography } from '@material-ui/core';\nimport React, {useEffect, useState} from 'react'\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport ThoughtForm from './components/ThoughtForm';\nimport ThoughtList from './components/ThoughtList';\n\n\nconst LOCAL_STORAGE_KEY='react-todo-list-todos';\nconst LOCAL_STORAGE_KEY2='react-tho-list-thos';\n\n\nfunction App() {\n\n  const [todos, setTodos]=useState([]);\n  const [thos, setThos]= useState([]);\n\n  //TODOS\n  useEffect(() => {\n    //add to local storage when app component mounts to the DOM\n    const storageTodos=JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if(storageTodos)\n    {\n      setTodos(storageTodos);\n    }\n  },[]);\n\n  useEffect(() => {\n    //add to local storage when todos array gets updated\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  },[todos]);\n  \n  //THOUGHTS\n  useEffect(() => {\n    const storageThos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY2));\n    if(storageThos)\n    {\n      setThos(storageThos);\n    }\n  },[]);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY2, JSON.stringify(thos));\n  },[thos]);\n\n\n  //TODOs\n  function addTodo(todo){\n    //adds new todo at the beginning of todos array\n    setTodos([todo, ...todos]);\n  }\n\n  function toggleComplete(id)\n  {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          };\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n  \n\n\n  //Thoughts\n  function addTho(tho){\n    setThos([tho,...thos]);\n  }\n\n  function toggleCompleteTho(id)\n  {\n    setThos(\n      thos.map(tho=>{\n        if(tho.id===id){\n          return{\n            ...tho, \n            completed:!tho.completed\n          };\n        }\n        return tho;\n      })\n    );\n  }\n\n  function removeTho(id){\n    setThos(thos.filter(tho=>tho.id!==id));\n  }\n\n\n  return (\n    <>\n    <div className=\"App\">\n      <Typography style={{ padding: \"16\", fontSize:\"50px\", fontFamily: \"'Permanent Marker', cursive\",textAlign:\"center\"}} variant=\"h3\">\n        My Task\n      </Typography>\n      <TodoForm addTodo={addTodo} />\n      <TodoList\n        todos={todos}\n        removeTodo={removeTodo}\n        toggleComplete={toggleComplete}\n      />\n    </div>\n    <div className=\"App\">\n      <Typography style={{ padding: \"16\", fontSize:\"50px\", fontFamily: \"'Permanent Marker', cursive\",textAlign:\"center\" }} variant=\"h3\">\n        My Thoughts\n      </Typography>\n      <ThoughtForm addTho={addTho} />\n      <ThoughtList\n        thos={thos}\n        removeTho={removeTho}\n        toggleCompleteTho={toggleCompleteTho}\n      />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}